cmake_minimum_required(VERSION 3.9)
project(OptCuts)

set(OPTCUTS_EXTERNAL "${CMAKE_CURRENT_SOURCE_DIR}/ext")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

include(${PROJECT_NAME}Dependencies)


# libigl
option(LIBIGL_USE_STATIC_LIBRARY "Use libigl as static library" OFF)
option(LIBIGL_WITH_ANTTWEAKBAR       "Use AntTweakBar"    OFF)
option(LIBIGL_WITH_CGAL              "Use CGAL"           OFF)
option(LIBIGL_WITH_COMISO            "Use CoMiso"         OFF)
option(LIBIGL_WITH_CORK              "Use Cork"           OFF)
option(LIBIGL_WITH_EMBREE            "Use Embree"         OFF)
option(LIBIGL_WITH_LIM               "Use LIM"            OFF)
option(LIBIGL_WITH_MATLAB            "Use Matlab"         OFF)
option(LIBIGL_WITH_MOSEK             "Use MOSEK"          OFF)
option(LIBIGL_WITH_OPENGL            "Use OpenGL"         ON)
option(LIBIGL_WITH_OPENGL_GLFW       "Use GLFW"           ON)
option(LIBIGL_WITH_OPENGL_GLFW_IMGUI "Use ImGui"          OFF)
option(LIBIGL_WITH_PNG               "Use PNG"            ON)
option(LIBIGL_WITH_PYTHON            "Use Python"         OFF)
option(LIBIGL_WITH_TETGEN            "Use Tetgen"         OFF)
option(LIBIGL_WITH_TRIANGLE          "Use Triangle"       ON)
option(LIBIGL_WITH_VIEWER            "Use OpenGL viewer"  ON)
option(LIBIGL_WITH_XML               "Use XML"            OFF)

find_package(LIBIGL REQUIRED QUIET)


# Python Bindings

if (CMAKE_VERSION VERSION_LESS 3.18)
  set(DEV_MODULE Development)
else()
  set(DEV_MODULE Development.Module)
endif()

find_package(Python 3.10 COMPONENTS Interpreter ${DEV_MODULE} REQUIRED)

if (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  set(CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build." FORCE)
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/ext/nanobind)


# Intel TBB
#include(ext/tbb/cmake/TBBGet.cmake)
#tbb_get(TBB_ROOT tbb_root CONFIG_DIR TBB_DIR)
#find_package(TBB REQUIRED tbb)


file(GLOB SRCFILES
  src/Optimizer.cpp
  src/TriMesh.cpp
  src/Scaffold.cpp

  src/Energy/Energy.cpp
  src/Energy/ARAPEnergy.cpp
  src/Energy/SymDirichletEnergy.cpp
  
  src/Utils/IglUtils.cpp
  
  src/LinSysSolver/EigenLibSolver.cpp
)

include_directories(
  src
  src/Energy
  src/Utils
  src/LinSysSolver
  src/UnitTest
)

add_executable(${PROJECT_NAME}_bin src/main.cpp ${SRCFILES})
target_link_libraries(${PROJECT_NAME}_bin igl::core igl::opengl_glfw igl::triangle igl::png TBB::tbb)

nanobind_add_module(PyOptCuts src/PyOptCuts.cpp ${SRCFILES})
target_link_libraries(PyOptCuts PRIVATE igl::core igl::opengl_glfw igl::triangle igl::png TBB::tbb)
install(TARGETS PyOptCuts DESTINATION ${CMAKE_SOURCE_DIR}/dist)

install(FILES ${CMAKE_SOURCE_DIR}/src/__init__.py DESTINATION ${CMAKE_SOURCE_DIR}/dist)
